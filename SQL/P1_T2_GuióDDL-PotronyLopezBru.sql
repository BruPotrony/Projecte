CREATE TABLE USUARI (
	login VARCHAR2 (30) CONSTRAINT PK_USUARI PRIMARY KEY 
			CONSTRAINT CK_LOGIN_USUARI CHECK (LENGTH (login) BETWEEN 4 AND 30),
    	nom VARCHAR2 (40) CONSTRAINT NN_NOM_USUARI NOT NULL 
			CONSTRAINT CK_NOM_USUARI CHECK ((LENGTH (nom) BETWEEN 2 AND 40) AND REGEXP_LIKE (nom, '^[A-Za-z]+$')),
	password VARCHAR2 (50) CONSTRAINT NN_PASSWORD_USUARI NOT NULL 
			CONSTRAINT CK_PASSWORD_USUARI CHECK((LENGTH (password) BETWEEN 35 AND 45) AND REGEXP_LIKE (password, '^[0-9A-Z]+$'))
);


CREATE TABLE TEMPORADA (
	anys NUMBER (5) CONSTRAINT PK_TEMPORADA PRIMARY KEY 
);


CREATE TABLE CATEGORIA (
	id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
	nom VARCHAR2 (40) CONSTRAINT UN_NOM_CATEGORIA UNIQUE 
			CONSTRAINT NN_NOM_CATEGORIA NOT NULL
			CONSTRAINT CK_NOM_CATEGORIA CHECK ((LENGTH(nom) > 1 AND LENGTH(nom) < 40) AND (REGEXP_LIKE(nom, '^[A-Za-z ]+$'))),
	edat_min NUMBER (3) CONSTRAINT CK_EDATMIN_CATEGORIA CHECK (edat_min > 6)
			CONSTRAINT NN_EDATMIN_CATEGORIA NOT NULL,
	edat_max NUMBER (3) CONSTRAINT CK_EDATMAX_CATEGORIA CHECK (edat_max < 150)
			CONSTRAINT NN_EDATMAX_CATEGORIA NOT NULL
);


CREATE TABLE EQUIP (
	id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
	id_categoria NUMBER CONSTRAINT FK_EQUIP_CATEGORIA REFERENCES CATEGORIA (id)
			CONSTRAINT NN_IDCATEGORIA_EQUIP NOT NULL,
	any_temporada NUMBER (5) CONSTRAINT FK_EQUIP_TEMPORADA REFERENCES TEMPORADA (anys)
			CONSTRAINT NN_ANYTEMPORADA_EQUIP NOT NULL,
	nom VARCHAR2(40) CONSTRAINT NN_NOM_EQUIP NOT NULL
			CONSTRAINT CK_NOM_EQUIP CHECK (LENGTH(nom) > 1 AND LENGTH(nom) < 40),
	tipus CHAR (1) CONSTRAINT NN_TIPUS_EQUIP NOT NULL
			CONSTRAINT CK_TIPUS_EQUIP CHECK (tipus IN ('H', 'D', 'M')),

	CONSTRAINT UN_NOM_ANYTEMPORADA_EQUIP UNIQUE (nom, any_temporada)
);


CREATE TABLE JUGADOR (
	id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
	nom VARCHAR2(40) CONSTRAINT NN_NOM_JUGADOR NOT NULL
			CONSTRAINT CK_NOM_JUGADOR CHECK (LENGTH(nom) > 1 AND LENGTH(nom) < 40 AND REGEXP_LIKE(nom, '^[A-Za-z]+$')),
	cognom VARCHAR2(40) CONSTRAINT NN_COGNOM_JUGADOR NOT NULL 
        		CONSTRAINT CK_COGNOM_JUGADOR CHECK (LENGTH(cognom) > 1 AND LENGTH(cognom) < 40 AND REGEXP_LIKE(cognom, '^[A-Za-z]+$')),
	sexe CHAR(1) CONSTRAINT NN_SEXE_JUGADOR NOT NULL
			CONSTRAINT CK_SEXE_JUGADOR CHECK (sexe IN ('H', 'D')),
	foto VARCHAR2(2500) CONSTRAINT NN_FOTO_JUGADOR NOT NULL,
	data_naix DATE CONSTRAINT NN_DATANAIX_JUGADOR NOT NULL,
	adreca VARCHAR2 (150) CONSTRAINT NN_ADRECA_JUGADOR NOT NULL
			CONSTRAINT CK_ADRECA_JUGADOR CHECK (LENGTH(adreca) >= 5),
	any_fi_revisio_medica NUMBER (5) CONSTRAINT NN_ANYFIREVMED_JUGADOR NOT NULL,
	IBAN VARCHAR2(36) CONSTRAINT NN_IBAN_JUGADOR NOT NULL
        		CONSTRAINT CK_IBAN_JUGADOR CHECK (REGEXP_LIKE(IBAN, '^[A-Z]{2}[0-9]{15,34}$')),
	idLegal VARCHAR2(40) CONSTRAINT UN_IDLEGAL_JUGADOR UNIQUE
			CONSTRAINT NN_IDLEGAL_JUGADOR NOT NULL
);


CREATE TABLE MEMBRE (
	id_equip NUMBER CONSTRAINT FK_MEMBRE_EQUIP REFERENCES EQUIP(id),
	id_jugador NUMBER CONSTRAINT FK_MEMBRE_JUGADOR REFERENCES JUGADOR(id),
	titular_convidat CHAR(1) CONSTRAINT CK_TITULAR_CONVIDAT CHECK (titular_convidat IN ('T', 'C')),
    	
	PRIMARY KEY (id_equip, id_jugador)
);


CREATE INDEX idx_jugador_nom ON JUGADOR(nom, cognom);
CREATE INDEX idx_equip_nom ON EQUIP(nom);


CREATE OR REPLACE TRIGGER trg_edat_jugador
BEFORE INSERT OR UPDATE ON JUGADOR
FOR EACH ROW
DECLARE
	v_anyNaix NUMBER;
	v_anyAct NUMBER;
BEGIN
	v_anyNaix := EXTRACT(YEAR FROM :NEW.data_naix);
	v_anyAct := EXTRACT(YEAR FROM SYSDATE);
    
	IF v_anyAct - v_anyNaix < 7 THEN
		RAISE_APPLICATION_ERROR(-20001, 'Edat de Jugador ha de ser major a 6');
	END IF;
END;
/



CREATE OR REPLACE TRIGGER trg_titular_unic
BEFORE INSERT OR UPDATE ON MEMBRE
FOR EACH ROW
DECLARE
	v_comptador NUMBER;
BEGIN
	IF :NEW.titular_convidat = 'T' THEN
		
		SELECT COUNT(*) 
		INTO v_comptador 
		FROM MEMBRE m JOIN EQUIP e ON m.id_equip = e.id
		WHERE m.id_jugador = :NEW.id_jugador AND m.titular_convidat = 'T'
		AND e.any_temporada = (SELECT any_temporada FROM EQUIP WHERE id = :NEW.id_equip);
		
		IF v_comptador > 0 THEN
			RAISE_APPLICATION_ERROR(-20002, 'El jugador ja és titular en un altre equip aquesta temporada');
		END IF;
	END IF;
END;
/



CREATE OR REPLACE TRIGGER trg_checksexe_equip
BEFORE INSERT OR UPDATE ON MEMBRE
FOR EACH ROW
DECLARE
	v_sexe CHAR(1);
	v_tipus CHAR(1);
BEGIN
	SELECT sexe INTO v_sexe FROM JUGADOR WHERE id = :NEW.id_jugador;

	SELECT tipus INTO v_tipus FROM EQUIP WHERE id = :NEW.id_equip;

	IF (v_tipus = 'H' AND v_sexe = 'D') OR (v_tipus = 'D' AND v_sexe = 'H') THEN
		RAISE_APPLICATION_ERROR(-20003, 'El jugador ha de concordar amb el sexe de l''equip');
	END IF;
END;
/


create or replace TRIGGER trg_checkedat_categoria
BEFORE INSERT OR UPDATE ON MEMBRE
FOR EACH ROW
DECLARE
	v_edat_max NUMBER;
	v_data_naix DATE;
	v_any_temporada NUMBER;
	v_edat_jugador NUMBER;
BEGIN
	SELECT c.edat_max INTO v_edat_max
	FROM CATEGORIA c JOIN EQUIP e ON c.id = e.id_categoria
	WHERE e.id = :NEW.id_equip;

	SELECT data_naix INTO v_data_naix FROM JUGADOR WHERE id = :NEW.id_jugador;
	SELECT any_temporada INTO v_any_temporada FROM EQUIP WHERE id = :NEW.id_equip;

	v_edat_jugador := v_any_temporada - EXTRACT(YEAR FROM v_data_naix);

	IF v_edat_jugador > v_edat_max THEN
		RAISE_APPLICATION_ERROR(-20004, 'L''edat del jugador no concorda amb els anys de la categoria');
	END IF;
END;
/


CREATE OR REPLACE TRIGGER trg_eliminarEquipAmbJugadors
BEFORE DELETE ON EQUIP
FOR EACH ROW
DECLARE
	v_comptador NUMBER;
BEGIN
	SELECT COUNT(*) INTO v_comptador FROM MEMBRE WHERE id_equip = :OLD.id;

	IF v_comptador > 0 THEN
		RAISE_APPLICATION_ERROR(-20005, 'No es pot eliminar ja que te jugadors assignats');
	END IF;
END;
/



CREATE OR REPLACE TRIGGER trg_check_any_temp
BEFORE INSERT OR UPDATE ON TEMPORADA
FOR EACH ROW
DECLARE
	v_any NUMBER;
BEGIN
	v_any := EXTRACT(YEAR FROM SYSDATE);

	IF :NEW.anys <= 1980 OR :NEW.anys >= (v_any + 5) THEN
		RAISE_APPLICATION_ERROR(-20006, 'L''any ha de ser major a 1980 i menor que d''aqui a 5 anys');
	END IF;
END;
/



CREATE OR REPLACE TRIGGER trg_check_any_fi_revisio_medica
BEFORE INSERT OR UPDATE ON JUGADOR
FOR EACH ROW
DECLARE
	v_any NUMBER;
BEGIN
	v_any := EXTRACT(YEAR FROM SYSDATE);

	IF :NEW.any_fi_revisio_medica < v_any THEN
		RAISE_APPLICATION_ERROR(-20007, 'L''any_fi_revisio_medica ha de ser major o igual que l''any actual.');
	END IF;
END;
/





CREATE OR REPLACE TRIGGER trg_check_titularminim
BEFORE INSERT OR UPDATE ON MEMBRE
FOR EACH ROW
DECLARE
        v_cont NUMBER;
BEGIN
        SELECT COUNT(*) INTO v_cont
        FROM MEMBRE
        WHERE id_jugador = :NEW.id_jugador
        AND titular_convidat = 'T';

        IF v_cont = 0 AND :NEW.titular_convidat = 'C' THEN
                RAISE_APPLICATION_ERROR(-20008, 'El jugador no pot ser convidat perquè no és titular en cap equip');
        END IF;
END;
/




CREATE OR REPLACE TRIGGER trg_check_categoria_titular
BEFORE INSERT OR UPDATE ON MEMBRE
FOR EACH ROW
DECLARE
    v_edat_min NUMBER;
    v_data_naix DATE;
    v_any_temporada NUMBER;
    v_edat_jugador NUMBER;
BEGIN
    SELECT c.edat_min
    INTO v_edat_min
    FROM CATEGORIA c
    JOIN EQUIP e ON c.id = e.id_categoria
    WHERE e.id = :NEW.id_equip;

    SELECT data_naix
    INTO v_data_naix
    FROM JUGADOR
    WHERE id = :NEW.id_jugador;

    SELECT any_temporada
    INTO v_any_temporada
    FROM EQUIP
    WHERE id = :NEW.id_equip;

    v_edat_jugador := v_any_temporada - EXTRACT(YEAR FROM v_data_naix);

    IF :NEW.titular_convidat = 'T' AND v_edat_jugador < v_edat_min THEN
        RAISE_APPLICATION_ERROR(-20009, 'El jugador no pot ser titular, la seva edat és inferior a l''edat mínima de la categoria');
    END IF;
END;
/